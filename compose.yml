version: "3.8"
name: multitenancy
services:
  nginx:
    build:
      context: ./docker/nginx
    hostname: nginx
    ports:
      - "8085:8085"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/opentelemetry_module.conf:/etc/nginx/conf.d/opentelemetry_module.conf:ro
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  grafana:
    image: grafana/grafana:10.1.4
    hostname: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./docker/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini

  loki:
    image: grafana/loki:2.9.1
    hostname: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:2.9.1
    hostname: promtail
    volumes:
      - ./docker/promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v2.47.1
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:2.2.3
    hostname: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTLP gRPC
      - "4318:4318"     # OTLP HTTP
      - "9411:9411"     # Zipkin
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo-config.yml

  db:
    image: postgres:16.0-alpine
    hostname: db
    ports:
      - "5432:5432"
    volumes:
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=multitenancy
      - POSTGRES_PASSWORD=multitenancy
      - POSTGRES_DB=multitenancy

  app:
    build: .
    hostname: app
    ports:
      - "8080:8080"
    environment:
      - MANAGEMENT_OTLP_TRACING_ENDPOINT=http://tempo:4318/v1/traces
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
